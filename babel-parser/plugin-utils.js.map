{"version":3,"names":["_estree","require","_index","_index2","_index3","_placeholders","_v8intrinsic","PIPELINE_PROPOSALS","process","env","BABEL_8_BREAKING","TOPIC_TOKENS","validatePlugins","pluginsMap","has","Error","decoratorsBeforeExport","get","allowCallParenthesized","proposal","includes","proposalList","map","p","join","tupleSyntaxIsHash","syntaxType","topicToken","tokenList","t","JSON","stringify","moduleAttributesVersionPluginOption","version","deprecatedAssertSyntax","set","RECORD_AND_TUPLE_SYNTAX_TYPES","error","missingPlugins","mixinPlugins","exports","estree","jsx","flow","typescript","v8intrinsic","placeholders","mixinPluginNames","Object","keys"],"sources":["../src/plugin-utils.ts"],"sourcesContent":["import type Parser from \"./parser/index.ts\";\nimport type { PluginConfig } from \"./typings.ts\";\n\nexport type Plugin = PluginConfig;\n\nexport type MixinPlugin = (\n  superClass: new (...args: any) => Parser,\n) => new (...args: any) => Parser;\n\nconst PIPELINE_PROPOSALS = process.env.BABEL_8_BREAKING\n  ? [\"fsharp\", \"hack\"]\n  : [\"minimal\", \"fsharp\", \"hack\", \"smart\"];\nconst TOPIC_TOKENS = [\"^^\", \"@@\", \"^\", \"%\", \"#\"];\n\nexport function validatePlugins(pluginsMap: Map<string, any>) {\n  if (pluginsMap.has(\"decorators\")) {\n    if (pluginsMap.has(\"decorators-legacy\")) {\n      throw new Error(\n        \"Cannot use the decorators and decorators-legacy plugin together\",\n      );\n    }\n\n    const decoratorsBeforeExport =\n      pluginsMap.get(\"decorators\").decoratorsBeforeExport;\n    if (\n      decoratorsBeforeExport != null &&\n      typeof decoratorsBeforeExport !== \"boolean\"\n    ) {\n      throw new Error(\n        \"'decoratorsBeforeExport' must be a boolean, if specified.\",\n      );\n    }\n\n    const allowCallParenthesized =\n      pluginsMap.get(\"decorators\").allowCallParenthesized;\n    if (\n      allowCallParenthesized != null &&\n      typeof allowCallParenthesized !== \"boolean\"\n    ) {\n      throw new Error(\"'allowCallParenthesized' must be a boolean.\");\n    }\n  }\n\n  if (pluginsMap.has(\"flow\") && pluginsMap.has(\"typescript\")) {\n    throw new Error(\"Cannot combine flow and typescript plugins.\");\n  }\n\n  if (pluginsMap.has(\"placeholders\") && pluginsMap.has(\"v8intrinsic\")) {\n    throw new Error(\"Cannot combine placeholders and v8intrinsic plugins.\");\n  }\n\n  if (pluginsMap.has(\"pipelineOperator\")) {\n    const proposal = pluginsMap.get(\"pipelineOperator\").proposal;\n\n    if (!PIPELINE_PROPOSALS.includes(proposal)) {\n      const proposalList = PIPELINE_PROPOSALS.map(p => `\"${p}\"`).join(\", \");\n      throw new Error(\n        `\"pipelineOperator\" requires \"proposal\" option whose value must be one of: ${proposalList}.`,\n      );\n    }\n\n    const tupleSyntaxIsHash = process.env.BABEL_8_BREAKING\n      ? pluginsMap.has(\"recordAndTuple\")\n      : pluginsMap.get(\"recordAndTuple\")?.syntaxType === \"hash\";\n\n    if (proposal === \"hack\") {\n      if (pluginsMap.has(\"placeholders\")) {\n        throw new Error(\n          \"Cannot combine placeholders plugin and Hack-style pipes.\",\n        );\n      }\n\n      if (pluginsMap.has(\"v8intrinsic\")) {\n        throw new Error(\n          \"Cannot combine v8intrinsic plugin and Hack-style pipes.\",\n        );\n      }\n\n      const topicToken = pluginsMap.get(\"pipelineOperator\").topicToken;\n\n      if (!TOPIC_TOKENS.includes(topicToken)) {\n        const tokenList = TOPIC_TOKENS.map(t => `\"${t}\"`).join(\", \");\n\n        throw new Error(\n          `\"pipelineOperator\" in \"proposal\": \"hack\" mode also requires a \"topicToken\" option whose value must be one of: ${tokenList}.`,\n        );\n      }\n\n      if (topicToken === \"#\" && tupleSyntaxIsHash) {\n        throw new Error(\n          `Plugin conflict between \\`[\"pipelineOperator\", { proposal: \"hack\", topicToken: \"#\" }]\\` and \\`${JSON.stringify([\"recordAndTuple\", pluginsMap.get(\"recordAndTuple\")])}\\`.`,\n        );\n      }\n    } else if (\n      !process.env.BABEL_8_BREAKING &&\n      proposal === \"smart\" &&\n      tupleSyntaxIsHash\n    ) {\n      throw new Error(\n        `Plugin conflict between \\`[\"pipelineOperator\", { proposal: \"smart\" }]\\` and \\`${JSON.stringify([\"recordAndTuple\", pluginsMap.get(\"recordAndTuple\")])}\\`.`,\n      );\n    }\n  }\n\n  if (pluginsMap.has(\"moduleAttributes\")) {\n    if (process.env.BABEL_8_BREAKING) {\n      throw new Error(\n        \"`moduleAttributes` has been removed in Babel 8, please migrate to import attributes instead.\",\n      );\n    } else {\n      if (\n        pluginsMap.has(\"deprecatedImportAssert\") ||\n        pluginsMap.has(\"importAssertions\")\n      ) {\n        throw new Error(\n          \"Cannot combine importAssertions, deprecatedImportAssert and moduleAttributes plugins.\",\n        );\n      }\n      const moduleAttributesVersionPluginOption =\n        pluginsMap.get(\"moduleAttributes\").version;\n      if (moduleAttributesVersionPluginOption !== \"may-2020\") {\n        throw new Error(\n          \"The 'moduleAttributes' plugin requires a 'version' option,\" +\n            \" representing the last proposal update. Currently, the\" +\n            \" only supported value is 'may-2020'.\",\n        );\n      }\n    }\n  }\n  if (pluginsMap.has(\"importAssertions\")) {\n    if (process.env.BABEL_8_BREAKING) {\n      throw new Error(\n        \"`importAssertions` has been removed in Babel 8, please use import attributes instead.\" +\n          \" To use the non-standard `assert` syntax you can enable the `deprecatedImportAssert` parser plugin.\",\n      );\n    } else if (pluginsMap.has(\"deprecatedImportAssert\")) {\n      throw new Error(\n        \"Cannot combine importAssertions and deprecatedImportAssert plugins.\",\n      );\n    }\n  }\n  if (\n    !pluginsMap.has(\"deprecatedImportAssert\") &&\n    pluginsMap.has(\"importAttributes\") &&\n    pluginsMap.get(\"importAttributes\").deprecatedAssertSyntax\n  ) {\n    if (process.env.BABEL_8_BREAKING) {\n      throw new Error(\n        \"The 'importAttributes' plugin has been removed in Babel 8. If you need to enable support \" +\n          \"for the deprecated `assert` syntax, you can enable the `deprecatedImportAssert` parser plugin.\",\n      );\n    } else {\n      pluginsMap.set(\"deprecatedImportAssert\", {});\n    }\n  }\n\n  if (pluginsMap.has(\"recordAndTuple\")) {\n    const syntaxType = pluginsMap.get(\"recordAndTuple\").syntaxType;\n    if (syntaxType != null) {\n      if (process.env.BABEL_8_BREAKING) {\n        if (syntaxType === \"hash\") {\n          throw new Error(\n            'The syntaxType option is no longer required in Babel 8. You can safely remove { syntaxType: \"hash\" } from the recordAndTuple config.',\n          );\n        } else {\n          throw new Error(\n            'The syntaxType option is no longer required in Babel 8. Please remove { syntaxType: \"bar\" } from the recordAndTuple config and migrate to the hash syntax #{} and #[].',\n          );\n        }\n      } else {\n        const RECORD_AND_TUPLE_SYNTAX_TYPES = [\"hash\", \"bar\"];\n        if (!RECORD_AND_TUPLE_SYNTAX_TYPES.includes(syntaxType)) {\n          throw new Error(\n            \"The 'syntaxType' option of the 'recordAndTuple' plugin must be one of: \" +\n              RECORD_AND_TUPLE_SYNTAX_TYPES.map(p => `'${p}'`).join(\", \"),\n          );\n        }\n      }\n    }\n  }\n\n  if (\n    pluginsMap.has(\"asyncDoExpressions\") &&\n    !pluginsMap.has(\"doExpressions\")\n  ) {\n    const error = new Error(\n      \"'asyncDoExpressions' requires 'doExpressions', please add 'doExpressions' to parser plugins.\",\n    );\n    // @ts-expect-error so @babel/core can provide better error message\n    error.missingPlugins = \"doExpressions\";\n    throw error;\n  }\n\n  if (\n    pluginsMap.has(\"optionalChainingAssign\") &&\n    pluginsMap.get(\"optionalChainingAssign\").version !== \"2023-07\"\n  ) {\n    throw new Error(\n      \"The 'optionalChainingAssign' plugin requires a 'version' option,\" +\n        \" representing the last proposal update. Currently, the\" +\n        \" only supported value is '2023-07'.\",\n    );\n  }\n\n  if (process.env.BABEL_8_BREAKING) {\n    if (pluginsMap.has(\"decimal\")) {\n      throw new Error(\n        \"The 'decimal' plugin has been removed in Babel 8. Please remove it from your configuration.\",\n      );\n    }\n    if (pluginsMap.has(\"importReflection\")) {\n      throw new Error(\n        \"The 'importReflection' plugin has been removed in Babel 8. Use 'sourcePhaseImports' instead, and \" +\n          \"replace 'import module' with 'import source' in your code.\",\n      );\n    }\n  }\n}\n\n// These plugins are defined using a mixin which extends the parser class.\n\nimport estree from \"./plugins/estree.ts\";\nimport flow from \"./plugins/flow/index.ts\";\nimport jsx from \"./plugins/jsx/index.ts\";\nimport typescript from \"./plugins/typescript/index.ts\";\nimport placeholders from \"./plugins/placeholders.ts\";\nimport v8intrinsic from \"./plugins/v8intrinsic.ts\";\n\n// NOTE: order is important. estree must come first; placeholders must come last.\nexport const mixinPlugins = {\n  estree,\n  jsx,\n  flow,\n  typescript,\n  v8intrinsic,\n  placeholders,\n};\n\nexport const mixinPluginNames = Object.keys(mixinPlugins) as ReadonlyArray<\n  \"estree\" | \"jsx\" | \"flow\" | \"typescript\" | \"v8intrinsic\" | \"placeholders\"\n>;\n"],"mappings":";;;;;;;AA6NA,IAAAA,OAAA,GAAAC,OAAA;AACA,IAAAC,MAAA,GAAAD,OAAA;AACA,IAAAE,OAAA,GAAAF,OAAA;AACA,IAAAG,OAAA,GAAAH,OAAA;AACA,IAAAI,aAAA,GAAAJ,OAAA;AACA,IAAAK,YAAA,GAAAL,OAAA;AAzNA,MAAMM,kBAAkB,GAAGC,OAAO,CAACC,GAAG,CAACC,gBAAgB,GACnD,CAAC,QAAQ,EAAE,MAAM,CAAC,GAClB,CAAC,SAAS,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,CAAC;AAC1C,MAAMC,YAAY,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;AAEzC,SAASC,eAAeA,CAACC,UAA4B,EAAE;EAC5D,IAAIA,UAAU,CAACC,GAAG,CAAC,YAAY,CAAC,EAAE;IAChC,IAAID,UAAU,CAACC,GAAG,CAAC,mBAAmB,CAAC,EAAE;MACvC,MAAM,IAAIC,KAAK,CACb,iEACF,CAAC;IACH;IAEA,MAAMC,sBAAsB,GAC1BH,UAAU,CAACI,GAAG,CAAC,YAAY,CAAC,CAACD,sBAAsB;IACrD,IACEA,sBAAsB,IAAI,IAAI,IAC9B,OAAOA,sBAAsB,KAAK,SAAS,EAC3C;MACA,MAAM,IAAID,KAAK,CACb,2DACF,CAAC;IACH;IAEA,MAAMG,sBAAsB,GAC1BL,UAAU,CAACI,GAAG,CAAC,YAAY,CAAC,CAACC,sBAAsB;IACrD,IACEA,sBAAsB,IAAI,IAAI,IAC9B,OAAOA,sBAAsB,KAAK,SAAS,EAC3C;MACA,MAAM,IAAIH,KAAK,CAAC,6CAA6C,CAAC;IAChE;EACF;EAEA,IAAIF,UAAU,CAACC,GAAG,CAAC,MAAM,CAAC,IAAID,UAAU,CAACC,GAAG,CAAC,YAAY,CAAC,EAAE;IAC1D,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAChE;EAEA,IAAIF,UAAU,CAACC,GAAG,CAAC,cAAc,CAAC,IAAID,UAAU,CAACC,GAAG,CAAC,aAAa,CAAC,EAAE;IACnE,MAAM,IAAIC,KAAK,CAAC,sDAAsD,CAAC;EACzE;EAEA,IAAIF,UAAU,CAACC,GAAG,CAAC,kBAAkB,CAAC,EAAE;IACtC,MAAMK,QAAQ,GAAGN,UAAU,CAACI,GAAG,CAAC,kBAAkB,CAAC,CAACE,QAAQ;IAE5D,IAAI,CAACZ,kBAAkB,CAACa,QAAQ,CAACD,QAAQ,CAAC,EAAE;MAC1C,MAAME,YAAY,GAAGd,kBAAkB,CAACe,GAAG,CAACC,CAAC,IAAI,IAAIA,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC;MACrE,MAAM,IAAIT,KAAK,CACb,6EAA6EM,YAAY,GAC3F,CAAC;IACH;IAEA,MAAMI,iBAAiB,GAAGjB,OAAO,CAACC,GAAG,CAACC,gBAAgB,GAClDG,UAAU,CAACC,GAAG,CAAC,gBAAgB,CAAC,GAChCD,UAAU,CAACI,GAAG,CAAC,gBAAgB,CAAC,EAAES,UAAU,KAAK,MAAM;IAE3D,IAAIP,QAAQ,KAAK,MAAM,EAAE;MACvB,IAAIN,UAAU,CAACC,GAAG,CAAC,cAAc,CAAC,EAAE;QAClC,MAAM,IAAIC,KAAK,CACb,0DACF,CAAC;MACH;MAEA,IAAIF,UAAU,CAACC,GAAG,CAAC,aAAa,CAAC,EAAE;QACjC,MAAM,IAAIC,KAAK,CACb,yDACF,CAAC;MACH;MAEA,MAAMY,UAAU,GAAGd,UAAU,CAACI,GAAG,CAAC,kBAAkB,CAAC,CAACU,UAAU;MAEhE,IAAI,CAAChB,YAAY,CAACS,QAAQ,CAACO,UAAU,CAAC,EAAE;QACtC,MAAMC,SAAS,GAAGjB,YAAY,CAACW,GAAG,CAACO,CAAC,IAAI,IAAIA,CAAC,GAAG,CAAC,CAACL,IAAI,CAAC,IAAI,CAAC;QAE5D,MAAM,IAAIT,KAAK,CACb,iHAAiHa,SAAS,GAC5H,CAAC;MACH;MAEA,IAAID,UAAU,KAAK,GAAG,IAAIF,iBAAiB,EAAE;QAC3C,MAAM,IAAIV,KAAK,CACb,iGAAiGe,IAAI,CAACC,SAAS,CAAC,CAAC,gBAAgB,EAAElB,UAAU,CAACI,GAAG,CAAC,gBAAgB,CAAC,CAAC,CAAC,KACvK,CAAC;MACH;IACF,CAAC,MAAM,IACL,CAACT,OAAO,CAACC,GAAG,CAACC,gBAAgB,IAC7BS,QAAQ,KAAK,OAAO,IACpBM,iBAAiB,EACjB;MACA,MAAM,IAAIV,KAAK,CACb,iFAAiFe,IAAI,CAACC,SAAS,CAAC,CAAC,gBAAgB,EAAElB,UAAU,CAACI,GAAG,CAAC,gBAAgB,CAAC,CAAC,CAAC,KACvJ,CAAC;IACH;EACF;EAEA,IAAIJ,UAAU,CAACC,GAAG,CAAC,kBAAkB,CAAC,EAAE;IACtC,IAAIN,OAAO,CAACC,GAAG,CAACC,gBAAgB,EAAE;MAChC,MAAM,IAAIK,KAAK,CACb,8FACF,CAAC;IACH,CAAC,MAAM;MACL,IACEF,UAAU,CAACC,GAAG,CAAC,wBAAwB,CAAC,IACxCD,UAAU,CAACC,GAAG,CAAC,kBAAkB,CAAC,EAClC;QACA,MAAM,IAAIC,KAAK,CACb,uFACF,CAAC;MACH;MACA,MAAMiB,mCAAmC,GACvCnB,UAAU,CAACI,GAAG,CAAC,kBAAkB,CAAC,CAACgB,OAAO;MAC5C,IAAID,mCAAmC,KAAK,UAAU,EAAE;QACtD,MAAM,IAAIjB,KAAK,CACb,4DAA4D,GAC1D,wDAAwD,GACxD,sCACJ,CAAC;MACH;IACF;EACF;EACA,IAAIF,UAAU,CAACC,GAAG,CAAC,kBAAkB,CAAC,EAAE;IACtC,IAAIN,OAAO,CAACC,GAAG,CAACC,gBAAgB,EAAE;MAChC,MAAM,IAAIK,KAAK,CACb,uFAAuF,GACrF,qGACJ,CAAC;IACH,CAAC,MAAM,IAAIF,UAAU,CAACC,GAAG,CAAC,wBAAwB,CAAC,EAAE;MACnD,MAAM,IAAIC,KAAK,CACb,qEACF,CAAC;IACH;EACF;EACA,IACE,CAACF,UAAU,CAACC,GAAG,CAAC,wBAAwB,CAAC,IACzCD,UAAU,CAACC,GAAG,CAAC,kBAAkB,CAAC,IAClCD,UAAU,CAACI,GAAG,CAAC,kBAAkB,CAAC,CAACiB,sBAAsB,EACzD;IACA,IAAI1B,OAAO,CAACC,GAAG,CAACC,gBAAgB,EAAE;MAChC,MAAM,IAAIK,KAAK,CACb,2FAA2F,GACzF,gGACJ,CAAC;IACH,CAAC,MAAM;MACLF,UAAU,CAACsB,GAAG,CAAC,wBAAwB,EAAE,CAAC,CAAC,CAAC;IAC9C;EACF;EAEA,IAAItB,UAAU,CAACC,GAAG,CAAC,gBAAgB,CAAC,EAAE;IACpC,MAAMY,UAAU,GAAGb,UAAU,CAACI,GAAG,CAAC,gBAAgB,CAAC,CAACS,UAAU;IAC9D,IAAIA,UAAU,IAAI,IAAI,EAAE;MACtB,IAAIlB,OAAO,CAACC,GAAG,CAACC,gBAAgB,EAAE;QAChC,IAAIgB,UAAU,KAAK,MAAM,EAAE;UACzB,MAAM,IAAIX,KAAK,CACb,sIACF,CAAC;QACH,CAAC,MAAM;UACL,MAAM,IAAIA,KAAK,CACb,wKACF,CAAC;QACH;MACF,CAAC,MAAM;QACL,MAAMqB,6BAA6B,GAAG,CAAC,MAAM,EAAE,KAAK,CAAC;QACrD,IAAI,CAACA,6BAA6B,CAAChB,QAAQ,CAACM,UAAU,CAAC,EAAE;UACvD,MAAM,IAAIX,KAAK,CACb,yEAAyE,GACvEqB,6BAA6B,CAACd,GAAG,CAACC,CAAC,IAAI,IAAIA,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC,IAAI,CAC9D,CAAC;QACH;MACF;IACF;EACF;EAEA,IACEX,UAAU,CAACC,GAAG,CAAC,oBAAoB,CAAC,IACpC,CAACD,UAAU,CAACC,GAAG,CAAC,eAAe,CAAC,EAChC;IACA,MAAMuB,KAAK,GAAG,IAAItB,KAAK,CACrB,8FACF,CAAC;IAEDsB,KAAK,CAACC,cAAc,GAAG,eAAe;IACtC,MAAMD,KAAK;EACb;EAEA,IACExB,UAAU,CAACC,GAAG,CAAC,wBAAwB,CAAC,IACxCD,UAAU,CAACI,GAAG,CAAC,wBAAwB,CAAC,CAACgB,OAAO,KAAK,SAAS,EAC9D;IACA,MAAM,IAAIlB,KAAK,CACb,kEAAkE,GAChE,wDAAwD,GACxD,qCACJ,CAAC;EACH;EAEA,IAAIP,OAAO,CAACC,GAAG,CAACC,gBAAgB,EAAE;IAChC,IAAIG,UAAU,CAACC,GAAG,CAAC,SAAS,CAAC,EAAE;MAC7B,MAAM,IAAIC,KAAK,CACb,6FACF,CAAC;IACH;IACA,IAAIF,UAAU,CAACC,GAAG,CAAC,kBAAkB,CAAC,EAAE;MACtC,MAAM,IAAIC,KAAK,CACb,mGAAmG,GACjG,4DACJ,CAAC;IACH;EACF;AACF;AAYO,MAAMwB,YAAY,GAAAC,OAAA,CAAAD,YAAA,GAAG;EAC1BE,MAAM,EAANA,eAAM;EACNC,GAAG,EAAHA,eAAG;EACHC,IAAI,EAAJA,cAAI;EACJC,UAAU,EAAVA,eAAU;EACVC,WAAW,EAAXA,oBAAW;EACXC,YAAY,EAAZA;AACF,CAAC;AAEM,MAAMC,gBAAgB,GAAAP,OAAA,CAAAO,gBAAA,GAAGC,MAAM,CAACC,IAAI,CAACV,YAAY,CAEvD","ignoreList":[]}