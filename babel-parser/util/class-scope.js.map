{"version":3,"names":["_scopeflags","require","_parseError","ClassScope","privateNames","Set","loneAccessors","Map","undefinedPrivateNames","exports","ClassScopeHandler","parser","stack","constructor","current","length","enter","push","exit","oldClassScope","pop","name","loc","Array","from","has","set","raise","Errors","InvalidPrivateFieldResolution","identifierName","declarePrivateName","elementType","redefined","ClassElementType","KIND_ACCESSOR","accessor","get","oldStatic","FLAG_STATIC","newStatic","oldKind","newKind","delete","PrivateNameRedeclaration","add","usePrivateName","classScope","default"],"sources":["../../src/util/class-scope.ts"],"sourcesContent":["import { ClassElementType } from \"./scopeflags.ts\";\nimport type { Position } from \"./location.ts\";\nimport { Errors } from \"../parse-error.ts\";\nimport type Tokenizer from \"../tokenizer/index.ts\";\n\nexport class ClassScope {\n  // A list of private named declared in the current class\n  privateNames: Set<string> = new Set();\n\n  // A list of private getters of setters without their counterpart\n  loneAccessors: Map<string, ClassElementType> = new Map();\n\n  // A list of private names used before being defined, mapping to\n  // their position.\n  undefinedPrivateNames: Map<string, Position> = new Map();\n}\n\nexport default class ClassScopeHandler {\n  parser: Tokenizer;\n  stack: Array<ClassScope> = [];\n  undefinedPrivateNames: Map<string, Position> = new Map();\n\n  constructor(parser: Tokenizer) {\n    this.parser = parser;\n  }\n\n  current(): ClassScope {\n    return this.stack[this.stack.length - 1];\n  }\n\n  enter() {\n    this.stack.push(new ClassScope());\n  }\n\n  exit() {\n    const oldClassScope = this.stack.pop();\n\n    // Migrate the usage of not yet defined private names to the outer\n    // class scope, or raise an error if we reached the top-level scope.\n\n    const current = this.current();\n\n    // Array.from is needed because this is compiled to an array-like for loop\n    for (const [name, loc] of Array.from(oldClassScope.undefinedPrivateNames)) {\n      if (current) {\n        if (!current.undefinedPrivateNames.has(name)) {\n          current.undefinedPrivateNames.set(name, loc);\n        }\n      } else {\n        this.parser.raise(Errors.InvalidPrivateFieldResolution, loc, {\n          identifierName: name,\n        });\n      }\n    }\n  }\n\n  declarePrivateName(\n    name: string,\n    elementType: ClassElementType,\n    loc: Position,\n  ) {\n    const { privateNames, loneAccessors, undefinedPrivateNames } =\n      this.current();\n    let redefined = privateNames.has(name);\n\n    if (elementType & ClassElementType.KIND_ACCESSOR) {\n      const accessor = redefined && loneAccessors.get(name);\n      if (accessor) {\n        const oldStatic = accessor & ClassElementType.FLAG_STATIC;\n        const newStatic = elementType & ClassElementType.FLAG_STATIC;\n\n        const oldKind = accessor & ClassElementType.KIND_ACCESSOR;\n        const newKind = elementType & ClassElementType.KIND_ACCESSOR;\n\n        // The private name can be duplicated only if it is used by\n        // two accessors with different kind (get and set), and if\n        // they have the same placement (static or not).\n        redefined = oldKind === newKind || oldStatic !== newStatic;\n\n        if (!redefined) loneAccessors.delete(name);\n      } else if (!redefined) {\n        loneAccessors.set(name, elementType);\n      }\n    }\n\n    if (redefined) {\n      this.parser.raise(Errors.PrivateNameRedeclaration, loc, {\n        identifierName: name,\n      });\n    }\n\n    privateNames.add(name);\n    undefinedPrivateNames.delete(name);\n  }\n\n  usePrivateName(name: string, loc: Position) {\n    let classScope;\n    for (classScope of this.stack) {\n      if (classScope.privateNames.has(name)) return;\n    }\n\n    if (classScope) {\n      classScope.undefinedPrivateNames.set(name, loc);\n    } else {\n      // top-level\n      this.parser.raise(Errors.InvalidPrivateFieldResolution, loc, {\n        identifierName: name,\n      });\n    }\n  }\n}\n"],"mappings":"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","ignoreList":[]}