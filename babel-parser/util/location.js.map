{"version":3,"names":["Position","line","column","index","constructor","col","exports","SourceLocation","start","end","filename","identifierName","createPositionWithColumnOffset","position","columnOffset"],"sources":["../../src/util/location.ts"],"sourcesContent":["export type Pos = {\n  start: number;\n};\n\n// These are used when `options.locations` is on, for the\n// `startLoc` and `endLoc` properties.\n\nexport class Position {\n  line: number;\n  column: number;\n  index: number;\n\n  constructor(line: number, col: number, index: number) {\n    this.line = line;\n    this.column = col;\n    this.index = index;\n  }\n}\n\nexport class SourceLocation {\n  start: Position;\n  end: Position;\n  filename: string;\n  identifierName: string | undefined | null;\n\n  constructor(start: Position, end?: Position) {\n    this.start = start;\n    // (may start as null, but initialized later)\n    this.end = end;\n  }\n}\n\n/**\n * creates a new position with a non-zero column offset from the given position.\n * This function should be only be used when we create AST node out of the token\n * boundaries, such as TemplateElement ends before tt.templateNonTail. This\n * function does not skip whitespaces.\n */\nexport function createPositionWithColumnOffset(\n  position: Position,\n  columnOffset: number,\n) {\n  const { line, column, index } = position;\n  return new Position(line, column + columnOffset, index + columnOffset);\n}\n"],"mappings":";;;;;;;AAOO,MAAMA,QAAQ,CAAC;EACpBC,IAAI;EACJC,MAAM;EACNC,KAAK;EAELC,WAAWA,CAACH,IAAY,EAAEI,GAAW,EAAEF,KAAa,EAAE;IACpD,IAAI,CAACF,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,MAAM,GAAGG,GAAG;IACjB,IAAI,CAACF,KAAK,GAAGA,KAAK;EACpB;AACF;AAACG,OAAA,CAAAN,QAAA,GAAAA,QAAA;AAEM,MAAMO,cAAc,CAAC;EAC1BC,KAAK;EACLC,GAAG;EACHC,QAAQ;EACRC,cAAc;EAEdP,WAAWA,CAACI,KAAe,EAAEC,GAAc,EAAE;IAC3C,IAAI,CAACD,KAAK,GAAGA,KAAK;IAElB,IAAI,CAACC,GAAG,GAAGA,GAAG;EAChB;AACF;AAACH,OAAA,CAAAC,cAAA,GAAAA,cAAA;AAQM,SAASK,8BAA8BA,CAC5CC,QAAkB,EAClBC,YAAoB,EACpB;EACA,MAAM;IAAEb,IAAI;IAAEC,MAAM;IAAEC;EAAM,CAAC,GAAGU,QAAQ;EACxC,OAAO,IAAIb,QAAQ,CAACC,IAAI,EAAEC,MAAM,GAAGY,YAAY,EAAEX,KAAK,GAAGW,YAAY,CAAC;AACxE","ignoreList":[]}