{"version":3,"names":["_context","require","beforeExpr","startsExpr","isLoop","isAssign","prefix","postfix","ExportedTokenType","label","keyword","rightAssociative","binop","constructor","conf","process","env","BABEL_8_BREAKING","updateContext","exports","keywords","Map","createKeyword","name","options","token","createToken","set","createBinop","tokenTypeCounter","tokenTypes","tokenLabels","tokenBinops","tokenBeforeExprs","tokenStartsExprs","tokenPrefixes","push","createKeywordLike","tt","bracketL","bracketHashL","bracketBarL","bracketR","bracketBarR","braceL","braceBarL","braceHashL","braceR","braceBarR","parenL","parenR","comma","semi","colon","doubleColon","dot","question","questionDot","arrow","template","ellipsis","backQuote","dollarBraceL","templateTail","templateNonTail","at","hash","interpreterDirective","eq","assign","slashAssign","xorAssign","moduloAssign","incDec","bang","tilde","doubleCaret","doubleAt","pipeline","nullishCoalescing","logicalOR","logicalAND","bitwiseOR","bitwiseXOR","bitwiseAND","equality","lt","gt","relational","bitShift","bitShiftL","bitShiftR","plusMin","modulo","star","slash","exponent","_in","_instanceof","_break","_case","_catch","_continue","_debugger","_default","_else","_finally","_function","_if","_return","_switch","_throw","_try","_var","_const","_with","_new","_this","_super","_class","_extends","_export","_import","_null","_true","_false","_typeof","_void","_delete","_do","_for","_while","_as","_assert","_async","_await","_defer","_from","_get","_let","_meta","_of","_sent","_set","_source","_static","_using","_yield","_asserts","_checks","_exports","_global","_implements","_intrinsic","_infer","_is","_mixins","_proto","_require","_satisfies","_keyof","_readonly","_unique","_abstract","_declare","_enum","_module","_namespace","_interface","_type","_opaque","placeholder","string","num","bigint","decimal","regexp","privateName","eof","jsxName","jsxText","jsxTagStart","jsxTagEnd","tokenIsIdentifier","tokenKeywordOrIdentifierIsKeyword","tokenIsKeywordOrIdentifier","tokenIsLiteralPropertyName","tokenComesBeforeExpression","tokenCanStartExpression","tokenIsAssignment","tokenIsFlowInterfaceOrTypeOrOpaque","tokenIsLoop","tokenIsKeyword","tokenIsOperator","tokenIsPostfix","tokenIsPrefix","tokenIsTSTypeOperator","tokenIsTSDeclarationStart","tokenLabelName","tokenOperatorPrecedence","tokenIsBinaryOperator","tokenIsRightAssociative","tokenIsTemplate","getExportedToken","isTokenType","obj","context","pop","tc","brace","length","j_expr","j_oTag"],"sources":["../../src/tokenizer/types.ts"],"sourcesContent":["import { types as tc, type TokContext } from \"./context.ts\";\n// ## Token types\n\n// The assignment of fine-grained, information-carrying type objects\n// allows the tokenizer to store the information it has about a\n// token in a way that is very cheap for the parser to look up.\n\n// All token type variables start with an underscore, to make them\n// easy to recognize.\n\n// The `beforeExpr` property is used to disambiguate between 1) binary\n// expression (<) and JSX Tag start (<name>); 2) object literal and JSX\n// texts. It is set on the `updateContext` function in the JSX plugin.\n\n// The `startsExpr` property is used to determine whether an expression\n// may be the “argument” subexpression of a `yield` expression or\n// `yield` statement. It is set on all token types that may be at the\n// start of a subexpression.\n\n// `isLoop` marks a keyword as starting a loop, which is important\n// to know when parsing a label, in order to allow or disallow\n// continue jumps to that label.\n\nconst beforeExpr = true;\nconst startsExpr = true;\nconst isLoop = true;\nconst isAssign = true;\nconst prefix = true;\nconst postfix = true;\n\ntype TokenOptions = {\n  keyword?: string;\n  beforeExpr?: boolean;\n  startsExpr?: boolean;\n  rightAssociative?: boolean;\n  isLoop?: boolean;\n  isAssign?: boolean;\n  prefix?: boolean;\n  postfix?: boolean;\n  binop?: number | null;\n};\n\n// Internally the tokenizer stores token as a number\nexport type TokenType = number;\n\n// The `ExportedTokenType` is exported via `tokTypes` and accessible\n// when `tokens: true` is enabled. Unlike internal token type, it provides\n// metadata of the tokens.\nexport class ExportedTokenType {\n  label: string;\n  keyword: string | undefined | null;\n  beforeExpr: boolean;\n  startsExpr: boolean;\n  rightAssociative: boolean;\n  isLoop: boolean;\n  isAssign: boolean;\n  prefix: boolean;\n  postfix: boolean;\n  binop: number | undefined | null;\n  // todo(Babel 8): remove updateContext from exposed token layout\n  declare updateContext:\n    | ((context: Array<TokContext>) => void)\n    | undefined\n    | null;\n\n  constructor(label: string, conf: TokenOptions = {}) {\n    this.label = label;\n    this.keyword = conf.keyword;\n    this.beforeExpr = !!conf.beforeExpr;\n    this.startsExpr = !!conf.startsExpr;\n    this.rightAssociative = !!conf.rightAssociative;\n    this.isLoop = !!conf.isLoop;\n    this.isAssign = !!conf.isAssign;\n    this.prefix = !!conf.prefix;\n    this.postfix = !!conf.postfix;\n    this.binop = conf.binop != null ? conf.binop : null;\n    if (!process.env.BABEL_8_BREAKING) {\n      this.updateContext = null;\n    }\n  }\n}\n\n// A map from keyword/keyword-like string value to the token type\nexport const keywords = new Map<string, TokenType>();\n\nfunction createKeyword(name: string, options: TokenOptions = {}): TokenType {\n  options.keyword = name;\n  const token = createToken(name, options);\n  keywords.set(name, token);\n  return token;\n}\n\nfunction createBinop(name: string, binop: number) {\n  return createToken(name, { beforeExpr, binop });\n}\n\nlet tokenTypeCounter = -1;\nexport const tokenTypes: ExportedTokenType[] = [];\nconst tokenLabels: string[] = [];\nconst tokenBinops: number[] = [];\nconst tokenBeforeExprs: boolean[] = [];\nconst tokenStartsExprs: boolean[] = [];\nconst tokenPrefixes: boolean[] = [];\n\nfunction createToken(name: string, options: TokenOptions = {}): TokenType {\n  ++tokenTypeCounter;\n  tokenLabels.push(name);\n  tokenBinops.push(options.binop ?? -1);\n  tokenBeforeExprs.push(options.beforeExpr ?? false);\n  tokenStartsExprs.push(options.startsExpr ?? false);\n  tokenPrefixes.push(options.prefix ?? false);\n  tokenTypes.push(new ExportedTokenType(name, options));\n\n  return tokenTypeCounter;\n}\n\nfunction createKeywordLike(\n  name: string,\n  options: TokenOptions = {},\n): TokenType {\n  ++tokenTypeCounter;\n  keywords.set(name, tokenTypeCounter);\n  tokenLabels.push(name);\n  tokenBinops.push(options.binop ?? -1);\n  tokenBeforeExprs.push(options.beforeExpr ?? false);\n  tokenStartsExprs.push(options.startsExpr ?? false);\n  tokenPrefixes.push(options.prefix ?? false);\n  // In the exported token type, we set the label as \"name\" for backward compatibility with Babel 7\n  tokenTypes.push(new ExportedTokenType(\"name\", options));\n\n  return tokenTypeCounter;\n}\n\n// For performance the token type helpers depend on the following declarations order.\n// When adding new token types, please also check if the token helpers need update.\n\nexport type InternalTokenTypes = typeof tt;\n\nexport const tt = {\n  // Punctuation token types.\n  bracketL: createToken(\"[\", { beforeExpr, startsExpr }),\n  bracketHashL: createToken(\"#[\", { beforeExpr, startsExpr }),\n  bracketBarL: createToken(\"[|\", { beforeExpr, startsExpr }),\n  bracketR: createToken(\"]\"),\n  bracketBarR: createToken(\"|]\"),\n  braceL: createToken(\"{\", { beforeExpr, startsExpr }),\n  braceBarL: createToken(\"{|\", { beforeExpr, startsExpr }),\n  braceHashL: createToken(\"#{\", { beforeExpr, startsExpr }),\n  braceR: createToken(\"}\"),\n  braceBarR: createToken(\"|}\"),\n  parenL: createToken(\"(\", { beforeExpr, startsExpr }),\n  parenR: createToken(\")\"),\n  comma: createToken(\",\", { beforeExpr }),\n  semi: createToken(\";\", { beforeExpr }),\n  colon: createToken(\":\", { beforeExpr }),\n  doubleColon: createToken(\"::\", { beforeExpr }),\n  dot: createToken(\".\"),\n  question: createToken(\"?\", { beforeExpr }),\n  questionDot: createToken(\"?.\"),\n  arrow: createToken(\"=>\", { beforeExpr }),\n  template: createToken(\"template\"),\n  ellipsis: createToken(\"...\", { beforeExpr }),\n  backQuote: createToken(\"`\", { startsExpr }),\n  dollarBraceL: createToken(\"${\", { beforeExpr, startsExpr }),\n  // start: isTemplate\n  templateTail: createToken(\"...`\", { startsExpr }),\n  templateNonTail: createToken(\"...${\", { beforeExpr, startsExpr }),\n  // end: isTemplate\n  at: createToken(\"@\"),\n  hash: createToken(\"#\", { startsExpr }),\n\n  // Special hashbang token.\n  interpreterDirective: createToken(\"#!...\"),\n\n  // Operators. These carry several kinds of properties to help the\n  // parser use them properly (the presence of these properties is\n  // what categorizes them as operators).\n  //\n  // `binop`, when present, specifies that this operator is a binary\n  // operator, and will refer to its precedence.\n  //\n  // `prefix` and `postfix` mark the operator as a prefix or postfix\n  // unary operator.\n  //\n  // `isAssign` marks all of `=`, `+=`, `-=` etcetera, which act as\n  // binary operators with a very low precedence, that should result\n  // in AssignmentExpression nodes.\n\n  // start: isAssign\n  eq: createToken(\"=\", { beforeExpr, isAssign }),\n  assign: createToken(\"_=\", { beforeExpr, isAssign }),\n  slashAssign: createToken(\"_=\", { beforeExpr, isAssign }),\n  // These are only needed to support % and ^ as a Hack-pipe topic token.\n  // When the proposal settles on a token, the others can be merged with\n  // tt.assign.\n  xorAssign: createToken(\"_=\", { beforeExpr, isAssign }),\n  moduloAssign: createToken(\"_=\", { beforeExpr, isAssign }),\n  // end: isAssign\n\n  incDec: createToken(\"++/--\", { prefix, postfix, startsExpr }),\n  bang: createToken(\"!\", { beforeExpr, prefix, startsExpr }),\n  tilde: createToken(\"~\", { beforeExpr, prefix, startsExpr }),\n\n  // More possible topic tokens.\n  // When the proposal settles on a token, at least one of these may be removed.\n  doubleCaret: createToken(\"^^\", { startsExpr }),\n  doubleAt: createToken(\"@@\", { startsExpr }),\n\n  // start: isBinop\n  pipeline: createBinop(\"|>\", 0),\n  nullishCoalescing: createBinop(\"??\", 1),\n  logicalOR: createBinop(\"||\", 1),\n  logicalAND: createBinop(\"&&\", 2),\n  bitwiseOR: createBinop(\"|\", 3),\n  bitwiseXOR: createBinop(\"^\", 4),\n  bitwiseAND: createBinop(\"&\", 5),\n  equality: createBinop(\"==/!=/===/!==\", 6),\n  lt: createBinop(\"</>/<=/>=\", 7),\n  gt: createBinop(\"</>/<=/>=\", 7),\n  relational: createBinop(\"</>/<=/>=\", 7),\n  bitShift: createBinop(\"<</>>/>>>\", 8),\n  bitShiftL: createBinop(\"<</>>/>>>\", 8),\n  bitShiftR: createBinop(\"<</>>/>>>\", 8),\n  plusMin: createToken(\"+/-\", { beforeExpr, binop: 9, prefix, startsExpr }),\n  // startsExpr: required by v8intrinsic plugin\n  modulo: createToken(\"%\", { binop: 10, startsExpr }),\n  // unset `beforeExpr` as it can be `function *`\n  star: createToken(\"*\", { binop: 10 }),\n  slash: createBinop(\"/\", 10),\n  exponent: createToken(\"**\", {\n    beforeExpr,\n    binop: 11,\n    rightAssociative: true,\n  }),\n\n  // Keywords\n  // Don't forget to update packages/babel-helper-validator-identifier/src/keyword.js\n  // when new keywords are added\n  // start: isLiteralPropertyName\n  // start: isKeyword\n  _in: createKeyword(\"in\", { beforeExpr, binop: 7 }),\n  _instanceof: createKeyword(\"instanceof\", { beforeExpr, binop: 7 }),\n  // end: isBinop\n  _break: createKeyword(\"break\"),\n  _case: createKeyword(\"case\", { beforeExpr }),\n  _catch: createKeyword(\"catch\"),\n  _continue: createKeyword(\"continue\"),\n  _debugger: createKeyword(\"debugger\"),\n  _default: createKeyword(\"default\", { beforeExpr }),\n  _else: createKeyword(\"else\", { beforeExpr }),\n  _finally: createKeyword(\"finally\"),\n  _function: createKeyword(\"function\", { startsExpr }),\n  _if: createKeyword(\"if\"),\n  _return: createKeyword(\"return\", { beforeExpr }),\n  _switch: createKeyword(\"switch\"),\n  _throw: createKeyword(\"throw\", { beforeExpr, prefix, startsExpr }),\n  _try: createKeyword(\"try\"),\n  _var: createKeyword(\"var\"),\n  _const: createKeyword(\"const\"),\n  _with: createKeyword(\"with\"),\n  _new: createKeyword(\"new\", { beforeExpr, startsExpr }),\n  _this: createKeyword(\"this\", { startsExpr }),\n  _super: createKeyword(\"super\", { startsExpr }),\n  _class: createKeyword(\"class\", { startsExpr }),\n  _extends: createKeyword(\"extends\", { beforeExpr }),\n  _export: createKeyword(\"export\"),\n  _import: createKeyword(\"import\", { startsExpr }),\n  _null: createKeyword(\"null\", { startsExpr }),\n  _true: createKeyword(\"true\", { startsExpr }),\n  _false: createKeyword(\"false\", { startsExpr }),\n  _typeof: createKeyword(\"typeof\", { beforeExpr, prefix, startsExpr }),\n  _void: createKeyword(\"void\", { beforeExpr, prefix, startsExpr }),\n  _delete: createKeyword(\"delete\", { beforeExpr, prefix, startsExpr }),\n  // start: isLoop\n  _do: createKeyword(\"do\", { isLoop, beforeExpr }),\n  _for: createKeyword(\"for\", { isLoop }),\n  _while: createKeyword(\"while\", { isLoop }),\n  // end: isLoop\n  // end: isKeyword\n\n  // Primary literals\n  // start: isIdentifier\n  _as: createKeywordLike(\"as\", { startsExpr }),\n  _assert: createKeywordLike(\"assert\", { startsExpr }),\n  _async: createKeywordLike(\"async\", { startsExpr }),\n  _await: createKeywordLike(\"await\", { startsExpr }),\n  _defer: createKeywordLike(\"defer\", { startsExpr }),\n  _from: createKeywordLike(\"from\", { startsExpr }),\n  _get: createKeywordLike(\"get\", { startsExpr }),\n  _let: createKeywordLike(\"let\", { startsExpr }),\n  _meta: createKeywordLike(\"meta\", { startsExpr }),\n  _of: createKeywordLike(\"of\", { startsExpr }),\n  _sent: createKeywordLike(\"sent\", { startsExpr }),\n  _set: createKeywordLike(\"set\", { startsExpr }),\n  _source: createKeywordLike(\"source\", { startsExpr }),\n  _static: createKeywordLike(\"static\", { startsExpr }),\n  _using: createKeywordLike(\"using\", { startsExpr }),\n  _yield: createKeywordLike(\"yield\", { startsExpr }),\n\n  // Flow and TypeScript Keywordlike\n  _asserts: createKeywordLike(\"asserts\", { startsExpr }),\n  _checks: createKeywordLike(\"checks\", { startsExpr }),\n  _exports: createKeywordLike(\"exports\", { startsExpr }),\n  _global: createKeywordLike(\"global\", { startsExpr }),\n  _implements: createKeywordLike(\"implements\", { startsExpr }),\n  _intrinsic: createKeywordLike(\"intrinsic\", { startsExpr }),\n  _infer: createKeywordLike(\"infer\", { startsExpr }),\n  _is: createKeywordLike(\"is\", { startsExpr }),\n  _mixins: createKeywordLike(\"mixins\", { startsExpr }),\n  _proto: createKeywordLike(\"proto\", { startsExpr }),\n  _require: createKeywordLike(\"require\", { startsExpr }),\n  _satisfies: createKeywordLike(\"satisfies\", { startsExpr }),\n  // start: isTSTypeOperator\n  _keyof: createKeywordLike(\"keyof\", { startsExpr }),\n  _readonly: createKeywordLike(\"readonly\", { startsExpr }),\n  _unique: createKeywordLike(\"unique\", { startsExpr }),\n  // end: isTSTypeOperator\n  // start: isTSDeclarationStart\n  _abstract: createKeywordLike(\"abstract\", { startsExpr }),\n  _declare: createKeywordLike(\"declare\", { startsExpr }),\n  _enum: createKeywordLike(\"enum\", { startsExpr }),\n  _module: createKeywordLike(\"module\", { startsExpr }),\n  _namespace: createKeywordLike(\"namespace\", { startsExpr }),\n  // start: isFlowInterfaceOrTypeOrOpaque\n  _interface: createKeywordLike(\"interface\", { startsExpr }),\n  _type: createKeywordLike(\"type\", { startsExpr }),\n  // end: isTSDeclarationStart\n  _opaque: createKeywordLike(\"opaque\", { startsExpr }),\n  // end: isFlowInterfaceOrTypeOrOpaque\n  name: createToken(\"name\", { startsExpr }),\n\n  // placeholder plugin\n  placeholder: createToken(\"%%\", { startsExpr: true }),\n  // end: isIdentifier\n\n  string: createToken(\"string\", { startsExpr }),\n  num: createToken(\"num\", { startsExpr }),\n  bigint: createToken(\"bigint\", { startsExpr }),\n  // TODO: Remove this in Babel 8\n  decimal: createToken(\"decimal\", { startsExpr }),\n  // end: isLiteralPropertyName\n  regexp: createToken(\"regexp\", { startsExpr }),\n  privateName: createToken(\"#name\", { startsExpr }),\n  eof: createToken(\"eof\"),\n\n  // jsx plugin\n  jsxName: createToken(\"jsxName\"),\n  jsxText: createToken(\"jsxText\", { beforeExpr: true }),\n  jsxTagStart: createToken(\"jsxTagStart\", { startsExpr: true }),\n  jsxTagEnd: createToken(\"jsxTagEnd\"),\n} as const;\n\nexport function tokenIsIdentifier(token: TokenType): boolean {\n  return token >= tt._as && token <= tt.placeholder;\n}\n\nexport function tokenKeywordOrIdentifierIsKeyword(token: TokenType): boolean {\n  // we can remove the token >= tt._in check when we\n  // know a token is either keyword or identifier\n  return token <= tt._while;\n}\n\nexport function tokenIsKeywordOrIdentifier(token: TokenType): boolean {\n  return token >= tt._in && token <= tt.placeholder;\n}\n\nexport function tokenIsLiteralPropertyName(token: TokenType): boolean {\n  return token >= tt._in && token <= tt.decimal;\n}\n\nexport function tokenComesBeforeExpression(token: TokenType): boolean {\n  return tokenBeforeExprs[token];\n}\n\nexport function tokenCanStartExpression(token: TokenType): boolean {\n  return tokenStartsExprs[token];\n}\n\nexport function tokenIsAssignment(token: TokenType): boolean {\n  return token >= tt.eq && token <= tt.moduloAssign;\n}\n\nexport function tokenIsFlowInterfaceOrTypeOrOpaque(token: TokenType): boolean {\n  return token >= tt._interface && token <= tt._opaque;\n}\n\nexport function tokenIsLoop(token: TokenType): boolean {\n  return token >= tt._do && token <= tt._while;\n}\n\nexport function tokenIsKeyword(token: TokenType): boolean {\n  return token >= tt._in && token <= tt._while;\n}\n\nexport function tokenIsOperator(token: TokenType): boolean {\n  return token >= tt.pipeline && token <= tt._instanceof;\n}\n\nexport function tokenIsPostfix(token: TokenType): boolean {\n  return token === tt.incDec;\n}\n\nexport function tokenIsPrefix(token: TokenType): boolean {\n  return tokenPrefixes[token];\n}\n\nexport function tokenIsTSTypeOperator(token: TokenType): boolean {\n  return token >= tt._keyof && token <= tt._unique;\n}\n\nexport function tokenIsTSDeclarationStart(token: TokenType): boolean {\n  return token >= tt._abstract && token <= tt._type;\n}\n\nexport function tokenLabelName(token: TokenType): string {\n  return tokenLabels[token];\n}\n\nexport function tokenOperatorPrecedence(token: TokenType): number {\n  return tokenBinops[token];\n}\n\nexport function tokenIsBinaryOperator(token: TokenType): boolean {\n  return tokenBinops[token] !== -1;\n}\n\nexport function tokenIsRightAssociative(token: TokenType): boolean {\n  return token === tt.exponent;\n}\n\nexport function tokenIsTemplate(token: TokenType): boolean {\n  return token >= tt.templateTail && token <= tt.templateNonTail;\n}\n\nexport function getExportedToken(token: TokenType): ExportedTokenType {\n  return tokenTypes[token];\n}\n\nexport function isTokenType(obj: any): boolean {\n  return typeof obj === \"number\";\n}\n\nif (!process.env.BABEL_8_BREAKING) {\n  tokenTypes[tt.braceR].updateContext = context => {\n    context.pop();\n  };\n\n  tokenTypes[tt.braceL].updateContext =\n    tokenTypes[tt.braceHashL].updateContext =\n    tokenTypes[tt.dollarBraceL].updateContext =\n      context => {\n        context.push(tc.brace);\n      };\n\n  tokenTypes[tt.backQuote].updateContext = context => {\n    if (context[context.length - 1] === tc.template) {\n      context.pop();\n    } else {\n      context.push(tc.template);\n    }\n  };\n\n  tokenTypes[tt.jsxTagStart].updateContext = context => {\n    context.push(tc.j_expr, tc.j_oTag);\n  };\n}\n"],"mappings":"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","ignoreList":[]}