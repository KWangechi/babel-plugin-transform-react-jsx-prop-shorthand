{"version":3,"names":["_location","require","_context","_types","LoopLabelKind","exports","Loop","Switch","State","flags","strict","v","startIndex","curLine","lineStart","startLoc","endLoc","init","strictMode","sourceType","startLine","startColumn","Position","errors","potentialArrowAt","noArrowAt","noArrowParamsConversionAt","maybeInArrowParameters","inType","noAnonFunctionType","hasFlowComment","isAmbientContext","inAbstractClass","inDisallowConditionalTypesContext","topicContext","maxNumOfResolvableTopics","maxTopicIndex","soloAwait","inFSharpPipelineDirectBody","labels","commentsLen","commentStack","pos","type","value","start","end","lastTokEndLoc","lastTokStartLoc","context","ct","brace","canStartJSXElement","containsEsc","firstInvalidTemplateEscapePos","hasTopLevelAwait","strictErrors","Map","tokensLength","curPosition","clone","state","slice","default"],"sources":["../../src/tokenizer/state.ts"],"sourcesContent":["import type { Options } from \"../options.ts\";\nimport type { CommentWhitespace } from \"../parser/comments\";\nimport { Position } from \"../util/location.ts\";\n\nimport { types as ct, type TokContext } from \"./context.ts\";\nimport { tt, type TokenType } from \"./types.ts\";\nimport type { Errors } from \"../parse-error.ts\";\nimport type { ParseError } from \"../parse-error.ts\";\n\nexport type DeferredStrictError =\n  | typeof Errors.StrictNumericEscape\n  | typeof Errors.StrictOctalLiteral;\n\ntype TopicContextState = {\n  // When a topic binding has been currently established,\n  // then this is 1. Otherwise, it is 0. This is forwards compatible\n  // with a future plugin for multiple lexical topics.\n  maxNumOfResolvableTopics: number;\n  // When a topic binding has been currently established, and if that binding\n  // has been used as a topic reference `#`, then this is 0. Otherwise, it is\n  // `null`. This is forwards compatible with a future plugin for multiple\n  // lexical topics.\n  maxTopicIndex: null | 0;\n};\n\nexport const enum LoopLabelKind {\n  Loop = 1,\n  Switch = 2,\n}\n\ndeclare const bit: import(\"../../../../scripts/babel-plugin-bit-decorator/types.d.ts\").BitDecorator<State>;\n\nexport default class State {\n  @bit.storage flags: number;\n\n  @bit accessor strict = false;\n\n  startIndex: number;\n  curLine: number;\n  lineStart: number;\n\n  // And, if locations are used, the {line, column} object\n  // corresponding to those offsets\n  startLoc: Position;\n  endLoc: Position;\n\n  init({\n    strictMode,\n    sourceType,\n    startIndex,\n    startLine,\n    startColumn,\n  }: Options): void {\n    this.strict =\n      strictMode === false\n        ? false\n        : strictMode === true\n          ? true\n          : sourceType === \"module\";\n\n    this.startIndex = startIndex;\n    this.curLine = startLine;\n    this.lineStart = -startColumn;\n    this.startLoc = this.endLoc = new Position(\n      startLine,\n      startColumn,\n      startIndex,\n    );\n  }\n\n  errors: ParseError<any>[] = [];\n\n  // Used to signify the start of a potential arrow function\n  potentialArrowAt: number = -1;\n\n  // Used to signify the start of an expression which looks like a\n  // typed arrow function, but it isn't\n  // e.g. a ? (b) : c => d\n  //          ^\n  noArrowAt: number[] = [];\n\n  // Used to signify the start of an expression whose params, if it looks like\n  // an arrow function, shouldn't be converted to assignable nodes.\n  // This is used to defer the validation of typed arrow functions inside\n  // conditional expressions.\n  // e.g. a ? (b) : c => d\n  //          ^\n  noArrowParamsConversionAt: number[] = [];\n\n  // Flags to track\n  @bit accessor maybeInArrowParameters = false;\n  @bit accessor inType = false;\n  @bit accessor noAnonFunctionType = false;\n  @bit accessor hasFlowComment = false;\n  @bit accessor isAmbientContext = false;\n  @bit accessor inAbstractClass = false;\n  @bit accessor inDisallowConditionalTypesContext = false;\n\n  // For the Hack-style pipelines plugin\n  topicContext: TopicContextState = {\n    maxNumOfResolvableTopics: 0,\n    maxTopicIndex: null,\n  };\n\n  // For the F#-style pipelines plugin\n  @bit accessor soloAwait = false;\n  @bit accessor inFSharpPipelineDirectBody = false;\n\n  // Labels in scope.\n  labels: Array<{\n    kind: LoopLabelKind;\n    name?: string | null;\n    statementStart?: number;\n  }> = [];\n\n  commentsLen = 0;\n  // Comment attachment store\n  commentStack: Array<CommentWhitespace> = [];\n\n  // The current position of the tokenizer in the input.\n  pos: number = 0;\n\n  // Properties of the current token:\n  // Its type\n  type: TokenType = tt.eof;\n\n  // For tokens that include more information than their type, the value\n  value: any = null;\n\n  // Its start and end offset\n  start: number = 0;\n  end: number = 0;\n\n  // Position information for the previous token\n  // this is initialized when generating the second token.\n  lastTokEndLoc: Position = null;\n  // this is initialized when generating the second token.\n  lastTokStartLoc: Position = null;\n\n  // The context stack is used to track whether the apostrophe \"`\" starts\n  // or ends a string template\n  context: Array<TokContext> = [ct.brace];\n\n  // Used to track whether a JSX element is allowed to form\n  @bit accessor canStartJSXElement = true;\n\n  // Used to signal to callers of `readWord1` whether the word\n  // contained any escape sequences. This is needed because words with\n  // escape sequences must not be interpreted as keywords.\n  @bit accessor containsEsc = false;\n\n  // Used to track invalid escape sequences in template literals,\n  // that must be reported if the template is not tagged.\n  firstInvalidTemplateEscapePos: null | Position = null;\n\n  @bit accessor hasTopLevelAwait = false;\n\n  // This property is used to track the following errors\n  // - StrictNumericEscape\n  // - StrictOctalLiteral\n  //\n  // in a literal that occurs prior to/immediately after a \"use strict\" directive.\n\n  // todo(JLHwung): set strictErrors to null and avoid recording string errors\n  // after a non-directive is parsed\n  strictErrors: Map<number, [DeferredStrictError, Position]> = new Map();\n\n  // Tokens length in token store\n  tokensLength: number = 0;\n\n  /**\n   * When we add a new property, we must manually update the `clone` method\n   * @see State#clone\n   */\n\n  curPosition(): Position {\n    return new Position(\n      this.curLine,\n      this.pos - this.lineStart,\n      this.pos + this.startIndex,\n    );\n  }\n\n  clone(): State {\n    const state = new State();\n    state.flags = this.flags;\n    state.startIndex = this.startIndex;\n    state.curLine = this.curLine;\n    state.lineStart = this.lineStart;\n    state.startLoc = this.startLoc;\n    state.endLoc = this.endLoc;\n    state.errors = this.errors.slice();\n    state.potentialArrowAt = this.potentialArrowAt;\n    state.noArrowAt = this.noArrowAt.slice();\n    state.noArrowParamsConversionAt = this.noArrowParamsConversionAt.slice();\n    state.topicContext = this.topicContext;\n    state.labels = this.labels.slice();\n    state.commentsLen = this.commentsLen;\n    state.commentStack = this.commentStack.slice();\n    state.pos = this.pos;\n    state.type = this.type;\n    state.value = this.value;\n    state.start = this.start;\n    state.end = this.end;\n    state.lastTokEndLoc = this.lastTokEndLoc;\n    state.lastTokStartLoc = this.lastTokStartLoc;\n    state.context = this.context.slice();\n    state.firstInvalidTemplateEscapePos = this.firstInvalidTemplateEscapePos;\n    state.strictErrors = this.strictErrors;\n    state.tokensLength = this.tokensLength;\n\n    return state;\n  }\n}\n\nexport type LookaheadState = {\n  pos: number;\n  value: any;\n  type: TokenType;\n  start: number;\n  end: number;\n  context: TokContext[];\n  startLoc: Position;\n  lastTokEndLoc: Position;\n  curLine: number;\n  lineStart: number;\n  curPosition: State[\"curPosition\"];\n  /* Used only in readToken_mult_modulo */\n  inType: boolean;\n  // These boolean properties are not initialized in createLookaheadState()\n  // instead they will only be set by the tokenizer\n  containsEsc?: boolean;\n};\n"],"mappings":";;;;;;AAEA,IAAAA,SAAA,GAAAC,OAAA;AAEA,IAAAC,QAAA,GAAAD,OAAA;AACA,IAAAE,MAAA,GAAAF,OAAA;AAAgD,MAoB9BG,aAAa,GAAAC,OAAA,CAAAD,aAAA;EAAAE,IAAA;EAAAC,MAAA;AAAA;AAOhB,MAAMC,KAAK,CAAC;EACZC,KAAK;EAAS,IAEbC,MAAMA,CAAA;IAAA,aAFPD,KAAK;EAAA;EAAA,IAEJC,MAAMA,CAAAC,CAAA;IAAA,IAAAA,CAAA,OAFPF,KAAK,gBAALA,KAAK;EAAA;EAIlBG,UAAU;EACVC,OAAO;EACPC,SAAS;EAITC,QAAQ;EACRC,MAAM;EAENC,IAAIA,CAAC;IACHC,UAAU;IACVC,UAAU;IACVP,UAAU;IACVQ,SAAS;IACTC;EACO,CAAC,EAAQ;IAChB,IAAI,CAACX,MAAM,GACTQ,UAAU,KAAK,KAAK,GAChB,KAAK,GACLA,UAAU,KAAK,IAAI,GACjB,IAAI,GACJC,UAAU,KAAK,QAAQ;IAE/B,IAAI,CAACP,UAAU,GAAGA,UAAU;IAC5B,IAAI,CAACC,OAAO,GAAGO,SAAS;IACxB,IAAI,CAACN,SAAS,GAAG,CAACO,WAAW;IAC7B,IAAI,CAACN,QAAQ,GAAG,IAAI,CAACC,MAAM,GAAG,IAAIM,kBAAQ,CACxCF,SAAS,EACTC,WAAW,EACXT,UACF,CAAC;EACH;EAEAW,MAAM,GAAsB,EAAE;EAG9BC,gBAAgB,GAAW,CAAC,CAAC;EAM7BC,SAAS,GAAa,EAAE;EAQxBC,yBAAyB,GAAa,EAAE;EAAC,IAG3BC,sBAAsBA,CAAA;IAAA,aAzDvBlB,KAAK;EAAA;EAAA,IAyDJkB,sBAAsBA,CAAAhB,CAAA;IAAA,IAAAA,CAAA,OAzDvBF,KAAK,gBAALA,KAAK;EAAA;EAAA,IA0DJmB,MAAMA,CAAA;IAAA,aA1DPnB,KAAK;EAAA;EAAA,IA0DJmB,MAAMA,CAAAjB,CAAA;IAAA,IAAAA,CAAA,OA1DPF,KAAK,gBAALA,KAAK;EAAA;EAAA,IA2DJoB,kBAAkBA,CAAA;IAAA,aA3DnBpB,KAAK;EAAA;EAAA,IA2DJoB,kBAAkBA,CAAAlB,CAAA;IAAA,IAAAA,CAAA,OA3DnBF,KAAK,gBAALA,KAAK;EAAA;EAAA,IA4DJqB,cAAcA,CAAA;IAAA,aA5DfrB,KAAK;EAAA;EAAA,IA4DJqB,cAAcA,CAAAnB,CAAA;IAAA,IAAAA,CAAA,OA5DfF,KAAK,iBAALA,KAAK;EAAA;EAAA,IA6DJsB,gBAAgBA,CAAA;IAAA,aA7DjBtB,KAAK;EAAA;EAAA,IA6DJsB,gBAAgBA,CAAApB,CAAA;IAAA,IAAAA,CAAA,OA7DjBF,KAAK,iBAALA,KAAK;EAAA;EAAA,IA8DJuB,eAAeA,CAAA;IAAA,aA9DhBvB,KAAK;EAAA;EAAA,IA8DJuB,eAAeA,CAAArB,CAAA;IAAA,IAAAA,CAAA,OA9DhBF,KAAK,iBAALA,KAAK;EAAA;EAAA,IA+DJwB,iCAAiCA,CAAA;IAAA,aA/DlCxB,KAAK;EAAA;EAAA,IA+DJwB,iCAAiCA,CAAAtB,CAAA;IAAA,IAAAA,CAAA,OA/DlCF,KAAK,kBAALA,KAAK;EAAA;EAkElByB,YAAY,GAAsB;IAChCC,wBAAwB,EAAE,CAAC;IAC3BC,aAAa,EAAE;EACjB,CAAC;EAAC,IAGYC,SAASA,CAAA;IAAA,aAxEV5B,KAAK;EAAA;EAAA,IAwEJ4B,SAASA,CAAA1B,CAAA;IAAA,IAAAA,CAAA,OAxEVF,KAAK,kBAALA,KAAK;EAAA;EAAA,IAyEJ6B,0BAA0BA,CAAA;IAAA,aAzE3B7B,KAAK;EAAA;EAAA,IAyEJ6B,0BAA0BA,CAAA3B,CAAA;IAAA,IAAAA,CAAA,OAzE3BF,KAAK,kBAALA,KAAK;EAAA;EA4ElB8B,MAAM,GAID,EAAE;EAEPC,WAAW,GAAG,CAAC;EAEfC,YAAY,GAA6B,EAAE;EAG3CC,GAAG,GAAW,CAAC;EAIfC,IAAI;EAGJC,KAAK,GAAQ,IAAI;EAGjBC,KAAK,GAAW,CAAC;EACjBC,GAAG,GAAW,CAAC;EAIfC,aAAa,GAAa,IAAI;EAE9BC,eAAe,GAAa,IAAI;EAIhCC,OAAO,GAAsB,CAACC,cAAE,CAACC,KAAK,CAAC;EAAC,IAG1BC,kBAAkBA,CAAA;IAAA,aA/GnB3C,KAAK;EAAA;EAAA,IA+GJ2C,kBAAkBA,CAAAzC,CAAA;IAAA,IAAAA,CAAA,OA/GnBF,KAAK,mBAALA,KAAK;EAAA;EAAA,IAoHJ4C,WAAWA,CAAA;IAAA,aApHZ5C,KAAK;EAAA;EAAA,IAoHJ4C,WAAWA,CAAA1C,CAAA;IAAA,IAAAA,CAAA,OApHZF,KAAK,mBAALA,KAAK;EAAA;EAwHlB6C,6BAA6B,GAAoB,IAAI;EAAC,IAExCC,gBAAgBA,CAAA;IAAA,aA1HjB9C,KAAK;EAAA;EAAA,IA0HJ8C,gBAAgBA,CAAA5C,CAAA;IAAA,IAAAA,CAAA,OA1HjBF,KAAK,mBAALA,KAAK;EAAA;EAoIlB+C,YAAY,GAAiD,IAAIC,GAAG,CAAC,CAAC;EAGtEC,YAAY,GAAW,CAAC;EAOxBC,WAAWA,CAAA,EAAa;IACtB,OAAO,IAAIrC,kBAAQ,CACjB,IAAI,CAACT,OAAO,EACZ,IAAI,CAAC6B,GAAG,GAAG,IAAI,CAAC5B,SAAS,EACzB,IAAI,CAAC4B,GAAG,GAAG,IAAI,CAAC9B,UAClB,CAAC;EACH;EAEAgD,KAAKA,CAAA,EAAU;IACb,MAAMC,KAAK,GAAG,IAAIrD,KAAK,CAAC,CAAC;IACzBqD,KAAK,CAACpD,KAAK,GAAG,IAAI,CAACA,KAAK;IACxBoD,KAAK,CAACjD,UAAU,GAAG,IAAI,CAACA,UAAU;IAClCiD,KAAK,CAAChD,OAAO,GAAG,IAAI,CAACA,OAAO;IAC5BgD,KAAK,CAAC/C,SAAS,GAAG,IAAI,CAACA,SAAS;IAChC+C,KAAK,CAAC9C,QAAQ,GAAG,IAAI,CAACA,QAAQ;IAC9B8C,KAAK,CAAC7C,MAAM,GAAG,IAAI,CAACA,MAAM;IAC1B6C,KAAK,CAACtC,MAAM,GAAG,IAAI,CAACA,MAAM,CAACuC,KAAK,CAAC,CAAC;IAClCD,KAAK,CAACrC,gBAAgB,GAAG,IAAI,CAACA,gBAAgB;IAC9CqC,KAAK,CAACpC,SAAS,GAAG,IAAI,CAACA,SAAS,CAACqC,KAAK,CAAC,CAAC;IACxCD,KAAK,CAACnC,yBAAyB,GAAG,IAAI,CAACA,yBAAyB,CAACoC,KAAK,CAAC,CAAC;IACxED,KAAK,CAAC3B,YAAY,GAAG,IAAI,CAACA,YAAY;IACtC2B,KAAK,CAACtB,MAAM,GAAG,IAAI,CAACA,MAAM,CAACuB,KAAK,CAAC,CAAC;IAClCD,KAAK,CAACrB,WAAW,GAAG,IAAI,CAACA,WAAW;IACpCqB,KAAK,CAACpB,YAAY,GAAG,IAAI,CAACA,YAAY,CAACqB,KAAK,CAAC,CAAC;IAC9CD,KAAK,CAACnB,GAAG,GAAG,IAAI,CAACA,GAAG;IACpBmB,KAAK,CAAClB,IAAI,GAAG,IAAI,CAACA,IAAI;IACtBkB,KAAK,CAACjB,KAAK,GAAG,IAAI,CAACA,KAAK;IACxBiB,KAAK,CAAChB,KAAK,GAAG,IAAI,CAACA,KAAK;IACxBgB,KAAK,CAACf,GAAG,GAAG,IAAI,CAACA,GAAG;IACpBe,KAAK,CAACd,aAAa,GAAG,IAAI,CAACA,aAAa;IACxCc,KAAK,CAACb,eAAe,GAAG,IAAI,CAACA,eAAe;IAC5Ca,KAAK,CAACZ,OAAO,GAAG,IAAI,CAACA,OAAO,CAACa,KAAK,CAAC,CAAC;IACpCD,KAAK,CAACP,6BAA6B,GAAG,IAAI,CAACA,6BAA6B;IACxEO,KAAK,CAACL,YAAY,GAAG,IAAI,CAACA,YAAY;IACtCK,KAAK,CAACH,YAAY,GAAG,IAAI,CAACA,YAAY;IAEtC,OAAOG,KAAK;EACd;AACF;AAACxD,OAAA,CAAA0D,OAAA,GAAAvD,KAAA","ignoreList":[]}